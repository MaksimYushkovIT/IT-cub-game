"""empty message

Revision ID: cf57d171d89f
Revises: 39ec9287488d
Create Date: 2024-09-28 04:23:24.532043

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cf57d171d89f'
down_revision = '39ec9287488d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('files')
    op.drop_table('assignments')
    op.drop_table('projects')
    op.drop_table('achievement_users')
    op.drop_table('project_students')
    op.drop_table('events')
    op.drop_table('faction_members')
    with op.batch_alter_table('achievements', schema=None) as batch_op:
        batch_op.add_column(sa.Column('type', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('avatar', sa.String(length=200), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)

    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('text', sa.Text(), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_column('content')

    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))

    with op.batch_alter_table('disciplines', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('faction_disciplines', schema=None) as batch_op:
        batch_op.alter_column('faction_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('discipline_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('factions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('experience', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('level', sa.Integer(), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('leader_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('friendships', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('friend_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('group_chat_users', schema=None) as batch_op:
        batch_op.alter_column('group_chat_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('group_chats', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('description')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('type', sa.String(length=50), nullable=False))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_column('price')

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.add_column(sa.Column('text', sa.Text(), nullable=False))
        batch_op.add_column(sa.Column('sender_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('receiver_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('conversation_id', sa.Integer(), nullable=True))
        batch_op.alter_column('group_chat_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint('messages_user_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['sender_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['receiver_id'], ['id'])
        batch_op.create_foreign_key(None, 'conversations', ['conversation_id'], ['id'])
        batch_op.drop_column('content')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('post_completed_players', schema=None) as batch_op:
        batch_op.alter_column('post_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('post_players', schema=None) as batch_op:
        batch_op.alter_column('post_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_completed', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('completion_date', sa.DateTime(), nullable=True))
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=250),
               existing_nullable=False)
        batch_op.alter_column('cover_image',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=500),
               existing_nullable=True)
        batch_op.alter_column('author',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=250),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('is_moderated',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('likes',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('experience_points',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('money_reward',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('participation_points',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('victory_points',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('importance',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.drop_column('comments')
        batch_op.drop_column('assignments')

    with op.batch_alter_table('ranks', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))

    with op.batch_alter_table('user_achievements', schema=None) as batch_op:
        batch_op.alter_column('achievement_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('user_disciplines', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('discipline_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('telegram_link', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('discord_link', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('avatar', sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column('group', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('teacher_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('lore', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('pedstage', sa.String(length=100), nullable=True))
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('patronymic',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               nullable=True)
        batch_op.alter_column('level',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('cube_coins',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('experience',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('position',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=50),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.create_foreign_key(None, 'users', ['teacher_id'], ['id'])
        batch_op.drop_column('is_teacher')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_teacher', sa.BOOLEAN(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('position',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('experience',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('cube_coins',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('level',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('patronymic',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('pedstage')
        batch_op.drop_column('lore')
        batch_op.drop_column('teacher_id')
        batch_op.drop_column('group')
        batch_op.drop_column('avatar')
        batch_op.drop_column('discord_link')
        batch_op.drop_column('telegram_link')

    with op.batch_alter_table('user_disciplines', schema=None) as batch_op:
        batch_op.alter_column('discipline_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('user_achievements', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('achievement_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('ranks', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('assignments', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('comments', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.alter_column('importance',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('victory_points',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('participation_points',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('money_reward',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('experience_points',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('likes',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('is_moderated',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('author',
               existing_type=sa.String(length=250),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.alter_column('cover_image',
               existing_type=sa.String(length=500),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.String(length=250),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('completion_date')
        batch_op.drop_column('is_completed')

    with op.batch_alter_table('post_players', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('post_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('post_completed_players', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('post_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('messages_user_id_fkey', 'users', ['user_id'], ['id'])
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('group_chat_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('conversation_id')
        batch_op.drop_column('receiver_id')
        batch_op.drop_column('sender_id')
        batch_op.drop_column('text')

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('type')

    with op.batch_alter_table('group_chats', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False))
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('group_chat_users', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('group_chat_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('friendships', schema=None) as batch_op:
        batch_op.alter_column('friend_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('factions', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('leader_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('level')
        batch_op.drop_column('experience')

    with op.batch_alter_table('faction_disciplines', schema=None) as batch_op:
        batch_op.alter_column('discipline_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('faction_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('disciplines', schema=None) as batch_op:
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.drop_column('created_at')

    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('text')

    with op.batch_alter_table('achievements', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('avatar')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('type')

    op.create_table('faction_members',
    sa.Column('faction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['faction_id'], ['factions.id'], name='faction_members_faction_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='faction_members_user_id_fkey')
    )
    op.create_table('events',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='events_pkey')
    )
    op.create_table('project_students',
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_students_project_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='project_students_user_id_fkey'),
    sa.PrimaryKeyConstraint('project_id', 'user_id', name='project_students_pkey')
    )
    op.create_table('achievement_users',
    sa.Column('achievement_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], name='achievement_users_achievement_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='achievement_users_user_id_fkey')
    )
    op.create_table('projects',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='projects_pkey')
    )
    op.create_table('assignments',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='assignments_post_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='assignments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='assignments_pkey')
    )
    op.create_table('files',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='files_pkey')
    )
    # ### end Alembic commands ###
